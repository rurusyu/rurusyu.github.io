{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/ajax-cors-fetch-json-get-post/","webpackCompilationHash":"16987cb9659f5c091fb9","result":{"data":{"markdownRemark":{"id":"5e6ec14f-e4c6-5410-b754-b7e0689b1891","html":"<h3 id=\"ajax\"><a href=\"#ajax\" aria-label=\"ajax permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ajax</h3>\n<ol>\n<li>AJAX는 Asynchronous JavaScript And XML</li>\n<li>필요할 때 api를 호출하고, 바꾸고 싶은 DOM 부분만 바꿔주는 것이 AJAX의 핵심</li>\n</ol>\n<h3 id=\"json\"><a href=\"#json\" aria-label=\"json permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON</h3>\n<ol>\n<li>13일의 금요일 제이슨이 아님</li>\n<li>JavaScript Object Notation의 줄임말</li>\n<li>프론트엔드의 언어는 자바스크립트이고 백엔드의 언어는 여러가지이다. 각 언어마다 데이터를 주고 받아야하는데,\n그때마다 다른 양식으로 준다면??? 프론트를 구성하는 자바스크립트에 기준을 맞춘 방식임.</li>\n<li>\n<p>규칙</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</li>\n<li>{ 로 시작해서 } 로 끝난다.</li>\n<li>key는 무조건 \"\" 쌍따옴표를 붙여줘야한다.</li>\n<li>value에 string이 올 경우에도 무조건 \"\" 쌍따옴표를 붙여줘야한다.</li>\n<li>\n<p>다음에 데이터가 더 있을 때만 , comma를 붙일 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</li>\n</ol>\n<h3 id=\"cors\"><a href=\"#cors\" aria-label=\"cors permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CORS</h3>\n<ol>\n<li>CORS는 Cross Origin Resource Sharing 의 줄임말로, 한국어로는 ‘동일출처정책’이라고 하는데 보통은 CORS(씨오알에스)라고 한다.</li>\n<li>왜 생기냐? 호출하는 쪽의 도메인주소와, 호출당하는 쪽의 도메인주소가 일치하지 않을 때, 브라우져가 보안상의 이유로 차단한다.</li>\n<li>통상은 백엔드 개발자에게 말하면 조치를 해준다 해서 그냥 넘기지 말고, 반드시 어떻게 처리하는지 알도록!</li>\n</ol>\n<h3 id=\"get-post방식\"><a href=\"#get-post%EB%B0%A9%EC%8B%9D\" aria-label=\"get post방식 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GET, POST방식</h3>\n<ol>\n<li>GET은 주소줄에 값이 ?뒤에 쌍으로 이어붙고 POST는 숨겨져서(body안에) 보내진다.</li>\n<li>POST방식은 바디안에 데이터 들어오기때문에 백엔드쪽에서는 바디를 파싱할 수 있어야한다.</li>\n<li>GET은 URL에 이어붙기 때문에 길이제한이 있어서 많은양의 데이터는 보내기 어렵고 POST는 많은 양의 보내기에도 적합하다.(역시 용량제한은 있지만)</li>\n<li>GET은 값을 조회할때 사용, POST는 값을 생성, 수정할때 사용</li>\n<li>HTTP메소드의 일환으로 6가지 정도 있다.</li>\n</ol>\n<h3 id=\"fetch\"><a href=\"#fetch\" aria-label=\"fetch permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fetch()</h3>\n<ol>\n<li>API를 호출할때 사용하는 함수</li>\n<li>\n<p>패턴이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">fetch(&#39;api주소&#39;)\n.then(function(response) {     \nreturn response.json();   \n})   \n.then(function(myJson) {     \n//응답 받은 data로 뭔가 한다. \n});</code></pre></div>\n</li>\n</ol>","fields":{"slug":"/posts/ajax-cors-fetch-json-get-post/","tagSlugs":["/tag/cors/","/tag/ajax/"]},"frontmatter":{"date":"2019-06-19T21:00:11.121Z","description":"웹개발때 알아야할 개념","tags":["CORS","AJAX"],"title":"Ajax, CORS, fetch, GET,POST,JSON "}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/ajax-cors-fetch-json-get-post/"}}}